CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(50) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    Password VARCHAR(100) NOT NULL,
    ProfilePicture VARCHAR(255),
    Gender ENUM('Male', 'Female', 'Other')
);
CREATE TABLE Calendar (
    CalendarID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    EventID INT,
    Date DATE,
    Title VARCHAR(100),
    Description TEXT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (EventID) REFERENCES Events(EventID)
);

CREATE TABLE Events (
    EventID INT AUTO_INCREMENT PRIMARY KEY,
    EventName VARCHAR(100) NOT NULL,
    EventDescription TEXT,
    EventDate DATE,
    CreatorID INT,
    FOREIGN KEY (CreatorID) REFERENCES Users(UserID)
);

CREATE TABLE Shares (
    ShareID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    EventID INT,
    ShareType ENUM('Public', 'Private'),
    SharedWithUserID INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (EventID) REFERENCES Events(EventID),
    FOREIGN KEY (SharedWithUserID) REFERENCES Users(UserID)
);

CREATE TABLE Statistics (
    StatID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    EventID INT,
    TaskID INT,
    ActivityType VARCHAR(50),
    ActivityDate DATE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (EventID) REFERENCES Events(EventID),
    FOREIGN KEY (TaskID) REFERENCES Tasks(TaskID)
);

CREATE TABLE Tasks (
    TaskID INT AUTO_INCREMENT PRIMARY KEY,
    TaskName VARCHAR(100) NOT NULL,
    TaskDescription TEXT,
    Deadline DATE,
    CreatorID INT,
    FOREIGN KEY (CreatorID) REFERENCES Users(UserID)
);

CREATE TABLE EventParticipants (
    EventID INT,
    UserID INT,
    PRIMARY KEY (EventID, UserID),
    FOREIGN KEY (EventID) REFERENCES Events(EventID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Reviews (
    ReviewID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    EventID INT,
    TaskID INT,
    ReviewText TEXT,
    Rating DECIMAL(3, 2),
    ReviewDate DATE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (EventID) REFERENCES Events(EventID),
    FOREIGN KEY (TaskID) REFERENCES Tasks(TaskID)
);
